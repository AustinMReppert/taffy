version: 2

jobs:
  core:
    docker:
      - image: rust:1

    steps:
      - checkout

      - restore_cache:
          key: target-cache

      - run: rustc --version; cargo --version; rustup --version
      - run: rustup component add rustfmt
      - run: rustup component add clippy
      - run: cargo fmt -- --check
      - run: cargo test
      - run: cargo clippy
      - run: cargo bench

      - save_cache:
          key: target-cache
          paths:
            - ~/.cargo
            - ./target

  android:
    docker:
      - image: circleci/android:api-28
    
    environment:
      _JAVA_OPTIONS: "-Xmx3200m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -XX:ParallelGCThreads=2 -XX:ConcGCThreads=2 -XX:ParallelGCThreads=2 -Djava.util.concurrent.ForkJoinPool.common.parallelism=2"

    steps:
      - checkout
      
      - restore_cache:
          key: jars-{{ checksum "bindings/kotlin/build.gradle" }}-{{ checksum  "bindings/kotlin/stretch/build.gradle" }}
      
      - run: curl https://sh.rustup.rs -sSf | sh -s -- -y
      - run: yes | sdkmanager --update || true
      - run: cd bindings/kotlin && ./gradlew androidDependencies --no-daemon --max-workers 2
      
      - save_cache:
          paths:
            - bindings/kotlin/.gradle
          key: jars-{{ checksum "bindings/kotlin/build.gradle" }}-{{ checksum  "bindings/kotlin/stretch/build.gradle" }}
      
      - run:
          name: Setup emulator
          command: sdkmanager "system-images;android-22;default;armeabi-v7a" && echo "no" | avdmanager create avd -n test -k "system-images;android-22;default;armeabi-v7a"
      
      - run:
          name: Launch emulator
          command: export LD_LIBRARY_PATH=${ANDROID_HOME}/emulator/lib64:${ANDROID_HOME}/emulator/lib64/qt/lib && emulator64-arm -avd test -noaudio -no-boot-anim -no-window -accel off
      
      - run:
          name: Run tests
          command: cd bindings/kotlin && ./gradlew connectedAndroidTest
      
      - store_artifacts:
          path: bindings/kotlin/stretch/build/test-results
          destination: reports
      
      - store_test_results:
          path: bindings/kotlin/stretch/build/test-results

workflows:
  version: 2
  test_all:
    jobs:
      - android
      - core
